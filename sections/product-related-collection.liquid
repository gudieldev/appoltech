<section class="featured-collection-slider section-padding">
	<div class="container">
		<div class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4">
			{% if recommendations.performed and recommendations.products_count > 0 %}
				<div class="section-title badge bg-danger">
					<h3 class="display-6">Related Products</h3>
				</div><!-- /.section-title -->
				<div class="featured-collection-slider__arrows">
					<div class="slick-arrows-wrapper"></div><!-- /.slick-arrows-wrapper -->
				</div><!-- /.featured-collection-slider_arrows -->
				
				<div class="collection-slider">
					{% for product in recommendations.products %}
						<div class="item">
							<div class="card">
								<div class="product-img">
									{{ product.featured_image | img_url: 'master' | img_tag: '', 'card-img-top' }}
								</div><!-- /.product-img -->
								<div class="card-body">
									<a href="{{ product.url }}"><h5 class="card-title">{{ product.title }}</h5></a>
									<p class="card-text">{{ product.price | money_with_currency }}</p>
									<a href="#0" class="btn btn-primary">View Details</a>
								</div><!-- /.card-body -->
							</div><!-- /.card -->
						</div><!-- /.item -->
					{% endfor %}
				</div><!-- /.collection-slider -->
			{% endif %}
		</div><!-- /.product-recommendations -->

	</div><!-- /.container -->
</section><!-- /.featured-collection-slider -->

{% javascript %}
	const handleIntersection = (entries, observer) => {
		if (!entries[0].isIntersecting) return;

		observer.unobserve(productRecommendationsSection);
		const url = productRecommendationsSection.dataset.url;

		fetch(url)
			.then(response => response.text())
			.then (text => {
				const html = document.createElement('div');
				html.innerHTML = text;
				const recommendations = html.querySelector('.product-recommendations');

				if (recommendations && recommendations.innerHTML.trim().length) {
					productRecommendationsSection.innerHTML = recommendations.innerHTML;
				}
			})
			.catch(e => {
				console.error(e);
			});
	};

	const productRecommendationsSection = document.querySelector('.product-recommendations');
	const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

	observer.observe();
{% endjavascript %}